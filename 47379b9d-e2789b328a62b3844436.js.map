{"version":3,"sources":["webpack:///./src/templates/votelog-template.js"],"names":["cssSection","borderBottom","paddingTop","paddingBottom","h2","fontSize","textAlign","margin","height","width","display","borderRadius","filterVote","combined","key","value","o","votelog","p","VotelogPage","data","votelogYaml","voteRecordIcon","downloadIcon","allPeopleVoteYaml","allPeopleYaml","calculateVoteLog","passed","total_voter","nodes","forEach","matched","id","push","approve","disprove","abstained","absent","pageStyles","background","mainStyles","padding","css","maxWidth","media","title","imageUrl","span","className","fixed","childImageSharp","meeting","vote_date","legal_title","float","alignItems","flexDirection","is_no_vote","no_vote_description","map","node","colors","borderColors","description_th","href","reference","document","filter","doc","link"],"mappings":"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","file":"47379b9d-e2789b328a62b3844436.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport { css } from \"@emotion/core\"\nimport _ from \"lodash\"\n\nimport ExternalLink from \"../components/externalLink\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport VoterList from \"../components/voterList\"\nimport Waffle from \"../components/waffle\"\nimport VoteLogLegend from \"../components/voteLogLegend\"\nimport { calculateVoteLog } from \"../utils\"\nimport { media } from \"../styles\"\n\nexport const query = graphql`\n  query($slug: String!) {\n    votelogYaml(fields: { slug: { eq: $slug } }) {\n      id\n      title\n      legal_title\n      vote_date(formatString: \"DD.M.YYYY\")\n      description_th\n      reference\n      document {\n        title\n        link\n      }\n      meeting\n      passed\n      is_no_vote\n      no_vote_description\n      approve\n      disprove\n      abstained\n      absent\n    }\n\n    voteRecordIcon: file(\n      relativePath: { eq: \"images/icons/votelog/votelog.png\" }\n    ) {\n      childImageSharp {\n        fixed(height: 30) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    downloadIcon: file(\n      relativePath: { eq: \"images/icons/download/download.png\" }\n    ) {\n      childImageSharp {\n        fixed(height: 20) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n\n    allPeopleVoteYaml {\n      nodes {\n        id\n        title\n        name\n        lastname\n        votelog {\n          key\n          value\n        }\n      }\n    }\n    allPeopleYaml {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        is_mp\n        is_senator\n        is_cabinet\n        mp_type\n        mp_list\n        mp_province\n        mp_zone\n        party\n      }\n    }\n  }\n`\n\nconst cssSection = {\n  borderBottom: \"0.5rem solid black\",\n  paddingTop: \"3rem\",\n  paddingBottom: \"3rem\",\n  h2: {\n    fontSize: \"4.8rem\",\n    textAlign: \"center\",\n  },\n  \".dot\": {\n    margin: \"0 1rem\",\n    height: \"2rem\",\n    width: \"2rem\",\n    display: \"inline-block\",\n    borderRadius: \"50%\",\n  },\n}\n\nconst filterVote = (combined, key, value) =>\n  _.filter(combined, o => {\n    return _.get(_.find(o.votelog || [], p => p.key === key), \"value\") === value\n  })\n\nconst VotelogPage = ({\n  data: {\n    votelogYaml,\n    voteRecordIcon,\n    downloadIcon,\n    allPeopleVoteYaml,\n    allPeopleYaml,\n  },\n}) => {\n  // Total members who're eligible to vote at that time\n  const { passed, total_voter } = calculateVoteLog(votelogYaml)\n\n  let combined = []\n  allPeopleVoteYaml.nodes.forEach(votelog => {\n    const matched = _.find(allPeopleYaml.nodes, [\"id\", votelog.id])\n    combined.push({ ...votelog, ...matched })\n  })\n  const approve = filterVote(combined, votelogYaml.id, \"1\")\n  const disprove = filterVote(combined, votelogYaml.id, \"2\")\n  const abstained = filterVote(combined, votelogYaml.id, \"3\")\n  const absent = filterVote(combined, votelogYaml.id, \"4\")\n\n  return (\n    <Layout\n      pageStyles={{\n        background: \"#000\",\n        paddingTop: \"5rem\",\n      }}\n      mainStyles={{\n        background: \"#fff\",\n        borderRadius: \"10px\",\n        padding: \"3rem\",\n      }}\n      css={{\n        maxWidth: \"calc(100% - 2rem)\",\n        [media(767)]: {\n          width: \"920px\",\n        },\n      }}\n    >\n      <SEO title={votelogYaml.title} imageUrl=\"/seo/share/votelog.png\" />\n      <section\n        css={{\n          ...cssSection,\n          paddingBottom: \"1rem !important\",\n          span: {\n            fontSize: \"3rem\",\n          },\n        }}\n      >\n        <div className=\"container\">\n          <span>\n            <Img\n              fixed={voteRecordIcon.childImageSharp.fixed}\n              css={css`\n                vertical-align: middle;\n              `}\n            />\n            {votelogYaml.meeting}\n            <span\n              css={css`\n                float: right;\n              `}\n            >\n              {votelogYaml.vote_date}\n            </span>\n          </span>\n        </div>\n      </section>\n      <section\n        css={{\n          ...cssSection,\n          paddingBottom: \"1rem !important\",\n          span: {\n            fontSize: \"3rem\",\n          },\n        }}\n      >\n        <div\n          className=\"container\"\n          css={css`\n            margin-bottom: 3rem;\n          `}\n        >\n          {\" \"}\n          <h1\n            css={{\n              marginTop: 0,\n            }}\n          >{`${votelogYaml.title}`}</h1>\n          <p\n            css={css`\n              font-size: 2rem;\n            `}\n          >\n            {votelogYaml.legal_title}\n          </p>\n        </div>\n        <span>\n          สถานะ{\" \"}\n          {passed ? (\n            <span\n              css={css`\n                color: var(--cl-vote-yes);\n              `}\n            >\n              <span\n                className=\"dot\"\n                css={{\n                  backgroundColor: \"var(--cl-vote-yes)\",\n                }}\n              ></span>\n              ผ่าน\n            </span>\n          ) : (\n            <span\n              css={css`\n                color: var(--cl-vote-no);\n              `}\n            >\n              <span\n                className=\"dot\"\n                css={{\n                  backgroundColor: \"var(--cl-vote-no)\",\n                }}\n              ></span>\n              ไม่ผ่าน\n            </span>\n          )}\n          <span\n            css={{\n              display: \"block\",\n              [media(767)]: {\n                float: \"right\",\n              },\n            }}\n          >\n            ผู้มีสิทธิ์ลงคะแนน {total_voter} คน\n          </span>\n        </span>\n      </section>\n      <section\n        css={{\n          display: \"flex\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n          ...cssSection,\n        }}\n      >\n        {votelogYaml.is_no_vote ? (\n          <div\n            css={css`\n              font-size: 2rem;\n              align-self: flex-start;\n            `}\n          >\n            {votelogYaml.no_vote_description || \"-\"}\n          </div>\n        ) : (\n          <>\n            <Waffle\n              data={[\n                approve.map(p => ({ node: p })),\n                disprove.map(p => ({ node: p })),\n                abstained.map(p => ({ node: p })),\n                absent.map(p => ({ node: p })),\n              ]}\n              colors={[\n                `var(--cl-vote-yes)`,\n                `var(--cl-vote-no)`,\n                `var(--cl-vote-abstained)`,\n                `var(--cl-vote-absent)`,\n              ]}\n              borderColors={[\n                `var(--cl-vote-yes)`,\n                `var(--cl-vote-no)`,\n                `var(--cl-vote-abstained)`,\n                `var(--cl-black)`,\n              ]}\n            />\n            <div css={{ marginTop: \"4rem\" }}>\n              <VoteLogLegend {...votelogYaml} />\n            </div>\n          </>\n        )}\n      </section>\n      <section\n        css={{\n          ...cssSection,\n          fontSize: \"2rem\",\n        }}\n      >\n        <h1>เนื้อหา</h1>\n        <p>{votelogYaml.description_th}</p>\n        <p\n          css={css`\n            font-weight: bold;\n            padding-top: 2em;\n          `}\n        >\n          อ้างอิง\n        </p>\n        <ExternalLink\n          href={votelogYaml.reference}\n          css={css`\n            :hover {\n              color: var(--cl-black);\n            }\n          `}\n        >\n          <p>{votelogYaml.reference}</p>\n        </ExternalLink>\n        <p\n          css={css`\n            font-weight: bold;\n            padding-top: 2em;\n          `}\n        >\n          เอกสารการลงมติ\n        </p>\n        <button\n          css={css`\n            display: flex;\n            flex-flow: row wrap;\n            padding: 0;\n            border: none;\n            background: none;\n            width: 100%;\n            border-radius: 5px;\n            pointer-events: none;\n            &:focus {\n              outline: none;\n            }\n            text-align: left;\n          `}\n        >\n          {votelogYaml.document\n            .filter(doc => doc.link)\n            .map(doc => (\n              <ExternalLink\n                key={doc.link}\n                href={doc.link}\n                css={css`\n                  color: var(--cl-black);\n                  :hover {\n                    color: var(--cl-black);\n                  }\n                `}\n              >\n                <span\n                  css={css`\n                    font-size: 2.4rem;\n                    font-family: var(--ff-title);\n                    line-height: 3rem;\n                    cursor: pointer;\n                    border-radius: 5px;\n                    padding: 1rem 1rem;\n                    margin-right: 1rem;\n                    margin-bottom: 1rem;\n                    display: block;\n                    background-color: var(--cl-pink);\n                    pointer-events: auto;\n                  `}\n                >\n                  <Img\n                    fixed={downloadIcon.childImageSharp.fixed}\n                    css={{ marginRight: \"1rem\" }}\n                  />\n                  {doc.title || \"เอกสาร\"}\n                </span>\n              </ExternalLink>\n            ))}\n        </button>\n      </section>\n      <section>\n        <div className=\"container\">\n          <h1>บันทึกคะแนนเสียง</h1>\n          {votelogYaml.is_no_vote ? (\n            <div\n              css={css`\n                font-size: 2rem;\n              `}\n            >\n              ไม่มีข้อมูลการลงคะแนนเสียง\n            </div>\n          ) : (\n            <VoterList data={[approve, disprove, abstained, absent]} />\n          )}\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default VotelogPage\n"],"sourceRoot":""}