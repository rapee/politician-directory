{"version":3,"sources":["webpack:///./src/templates/party-template.js"],"names":["cssH1","fontSize","cssSection","paddingTop","paddingBottom","h2","textAlign","cssEngTitle","margin","cssPageP","cssBarChart","PartyPage","props","selectedMembers","data","party","useState","memberFilter","setMemberFilter","members","allPeopleYaml","edges","map","e","node","countMembers","filter","member","mp_type","length","tabList","id","label","count","getClass","loadCategoryStats","gender","age","education","occupation_group","asset","keyMembers","name","keyPos","nameParts","split","slice","slug","peopleSlug","join","lastname","position","fields","showingMembers","sort","a","b","mp_list","mp_province","mp_zone","localeCompare","votelogs","joinPeopleVotelog","allPeopleVoteYaml","allVotelogYaml","vote","total_voter","pageStyles","background","color","title","imageUrl","className","css","style","en","description","x","key","marginTop","marginBottom","fontFamily","fontWeight","totalCount","view","width","description_th","passed","approve","disprove","abstained","absent","vote_date","tab","role","onClick","index","type"],"mappings":"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","file":"41123ed7-6459af83f611ea534f50.js","sourcesContent":["import React, { useState } from \"react\"\nimport { graphql } from \"gatsby\"\nimport _ from \"lodash\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { loadCategoryStats, joinPeopleVotelog, peopleSlug } from \"../utils\"\nimport StackedBarChart from \"../components/stackedBarChart\"\nimport { OfficialWebsite, InOfficeDate } from \"../components/profile\"\nimport PeopleCardMini from \"../components/peopleCardMini\"\nimport PeopleCard from \"../components/peopleCard\"\nimport VoteLogCard from \"../components/voteLogCard\"\n\nimport \"../styles/profile-book.css\"\n\nexport const query = graphql`\n  query($slug: String!, $party: String!) {\n    party: partyYaml(\n      party_type: { eq: \"พรรค\" }\n      fields: { slug: { eq: $slug } }\n    ) {\n      id\n      name\n      short_name\n      description\n      established_date\n      dissolved_date\n      color\n      en {\n        name\n        description\n      }\n      party_group\n      total_member\n      party_leader\n      party_secretary\n      website\n      facebook\n      twitter\n      email\n      phone\n      ratchakitcha\n      is_active\n    }\n    allPeopleYaml(\n      filter: {\n        is_mp: { eq: true }\n        party: { eq: $party }\n        is_active: { eq: true }\n      }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          title\n          name\n          lastname\n          party\n          party_group\n          mp_type\n          mp_province\n          mp_zone\n          mp_list\n        }\n      }\n    }\n    mp_type: allPeopleYaml(\n      filter: {\n        is_mp: { eq: true }\n        party: { eq: $party }\n        is_active: { eq: true }\n      }\n    ) {\n      group(field: mp_type) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    gender: allPeopleYaml(\n      filter: {\n        is_mp: { eq: true }\n        party: { eq: $party }\n        is_active: { eq: true }\n      }\n    ) {\n      group(field: gender) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    education: allPeopleYaml(\n      filter: {\n        is_mp: { eq: true }\n        party: { eq: $party }\n        is_active: { eq: true }\n      }\n    ) {\n      group(field: education) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    occupation_group: allPeopleYaml(\n      filter: {\n        is_mp: { eq: true }\n        party: { eq: $party }\n        is_active: { eq: true }\n      }\n    ) {\n      group(field: occupation_group) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    age: allPeopleYaml(\n      filter: {\n        is_mp: { eq: true }\n        party: { eq: $party }\n        is_active: { eq: true }\n      }\n    ) {\n      edges {\n        node {\n          birthdate\n        }\n      }\n    }\n    asset: allPeopleYaml(\n      filter: {\n        is_mp: { eq: true }\n        party: { eq: $party }\n        is_active: { eq: true }\n      }\n    ) {\n      edges {\n        node {\n          asset\n        }\n      }\n    }\n    allVotelogYaml(\n      filter: { is_active: { eq: true } }\n      limit: 6\n      sort: { fields: vote_date, order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          title\n          description_th\n          passed\n          is_no_vote\n          no_vote_description\n          vote_date\n        }\n      }\n    }\n    allPeopleVoteYaml {\n      edges {\n        node {\n          id\n          votelog {\n            key\n            value\n          }\n        }\n      }\n    }\n  }\n`\n\nconst cssH1 = {\n  fontSize: \"4rem\",\n}\n\nconst cssSection = {\n  paddingTop: \"3rem\",\n  paddingBottom: \"8rem\",\n  h2: {\n    fontSize: \"4.8rem\",\n    textAlign: \"center\",\n  },\n}\n\nconst cssEngTitle = {\n  fontSize: \"2.4rem\",\n  textAlign: \"left\",\n  margin: \"1.5rem 0 1.2rem 0\",\n}\n\nconst cssPageP = {}\n\nconst cssBarChart = {\n  margin: \"1rem 0\",\n}\n\nconst PartyPage = props => {\n  const { party, ...data } = props.data\n\n  const [memberFilter, setMemberFilter] = useState({})\n  const [members] = useState(data.allPeopleYaml.edges.map(e => e.node))\n  const selectMemberFilter = filter => () => setMemberFilter(filter)\n\n  const countMembers = filter => {\n    // filter member by mp_type\n    let selectedMembers = members.filter(\n      member => !filter.mp_type || member.mp_type === filter.mp_type\n    )\n    return selectedMembers.length\n  }\n  const getSortedMembers = () => {\n    // filter party member by mp_type\n    let selectedMembers = members.filter(\n      member => !memberFilter.mp_type || member.mp_type === memberFilter.mp_type\n    )\n    if (memberFilter.mp_type === \"บัญชีรายชื่อ\") {\n      // sort by party list\n      selectedMembers.sort((a, b) => a.mp_list - b.mp_list)\n    } else if (memberFilter.mp_type === \"แบ่งเขต\") {\n      // sort by province and zone\n      selectedMembers.sort((a, b) =>\n        a.mp_province === b.mp_province\n          ? a.mp_zone - b.mp_zone\n          : a.mp_province.localeCompare(b.mp_province, \"th\")\n      )\n    } else {\n      // sort by name and lastname\n      selectedMembers.sort((a, b) =>\n        a.name === b.name\n          ? a.lastname.localeCompare(b.lastname, \"th\")\n          : a.name.localeCompare(b.name, \"th\")\n      )\n    }\n    return selectedMembers\n  }\n\n  const tabList = [\n    {\n      id: \"ทั้งหมด\",\n      label: \"ทั้งหมด\",\n      count: countMembers({}),\n      filter: {},\n      getClass: memberFilter => (!memberFilter.mp_type ? \"active\" : \"\"),\n    },\n    {\n      id: \"บัญชีรายชื่อ\",\n      label: \"บัญชีรายชื่อ\",\n      count: countMembers({ mp_type: \"บัญชีรายชื่อ\" }),\n      filter: { mp_type: \"บัญชีรายชื่อ\" },\n      getClass: memberFilter =>\n        memberFilter.mp_type === \"บัญชีรายชื่อ\" ? \"active\" : \"\",\n    },\n    {\n      id: \"แบ่งเขต\",\n      label: \"แบ่งเขต\",\n      count: countMembers({ mp_type: \"แบ่งเขต\" }),\n      filter: { mp_type: \"แบ่งเขต\" },\n      getClass: memberFilter =>\n        memberFilter.mp_type === \"แบ่งเขต\" ? \"active\" : \"\",\n    },\n  ]\n\n  const {\n    mp_type,\n    gender,\n    age,\n    education,\n    occupation_group,\n    asset,\n  } = loadCategoryStats(data)\n\n  const keyMembers = _.compact(\n    [\n      {\n        name: \"party_leader\",\n        label: \"หัวหน้าพรรค\",\n      },\n      {\n        name: \"party_secretary\",\n        label: \"เลขาธิการพรรค\",\n      },\n    ].map((keyPos, id) => {\n      if (!party[keyPos.name]) return null\n      const nameParts = party[keyPos.name].split(\" \").slice(1)\n      const slug = peopleSlug(nameParts.join(\" \"))\n      const name = nameParts[0]\n      const lastname = nameParts.slice(1).join(\" \")\n      const position = keyPos.label\n      return { id, name, lastname, position, fields: { slug } }\n    })\n  )\n\n  const showingMembers = getSortedMembers()\n\n  const votelogs = joinPeopleVotelog(\n    data.allPeopleYaml,\n    data.allPeopleVoteYaml,\n    data.allVotelogYaml\n  ).filter(vote => vote.total_voter > 0)\n\n  return (\n    <Layout pageStyles={{ background: party.color }}>\n      <SEO title={`พรรค${party.name}`} imageUrl=\"/seo/share/party.png\" />\n      <section className=\"section\">\n        <div className=\"book\">\n          <div className=\"page leftPage\">\n            <h1 css={{ ...cssH1, margin: \"1rem 0 0 0\" }}>พรรค{party.name}</h1>\n            <h2 style={{ ...cssEngTitle }}>{party.en.name} Party</h2>\n            <h2 style={{ ...cssEngTitle }}>About</h2>\n            <p css={{ ...cssPageP }}>{party.description}</p>\n            <h2 css={{ ...cssEngTitle }}>Official Link</h2>\n            <OfficialWebsite {...party}></OfficialWebsite>\n            <h2 css={{ ...cssEngTitle }}>In Office</h2>\n            <InOfficeDate {...party}></InOfficeDate>\n            <h2 style={{ ...cssEngTitle }}>Key Members</h2>\n            {keyMembers.map(x => {\n              return (\n                <div className=\"peopleCard\" key={x.id}>\n                  <PeopleCardMini key={x.id} {...x} />\n                </div>\n              )\n            })}\n          </div>\n          <div className=\"page\">\n            <h2\n              style={{\n                ...cssEngTitle,\n                marginTop: \"11.1rem\",\n                marginBottom: \"0rem\",\n              }}\n            >\n              Members\n            </h2>\n            <h2\n              style={{\n                ...cssEngTitle,\n                fontFamily: \"var(--ff-text)\",\n                fontWeight: \"normal\",\n              }}\n            >\n              สมาชิกสภาผู้แทนราษฎรจำนวน {data.allPeopleYaml.totalCount} คน\n            </h2>\n            <div css={{ width: \"100%\" }}>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={mp_type}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={gender}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={age}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={education}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={occupation_group}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={asset}></StackedBarChart>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {votelogs.length > 0 ? (\n        <section css={{ ...cssSection, background: \"var(--cl-white)\" }}>\n          <div className=\"container\">\n            <h2 css={{ ...cssH1 }}>การลงมติล่าสุดของพรรค</h2>\n            <div\n              css={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"flex-start\",\n                flexWrap: \"wrap\",\n                marginTop: \"6rem\",\n              }}\n            >\n              {votelogs.map(node => (\n                <VoteLogCard\n                  key={node.id}\n                  view={\"compact\"}\n                  css={{\n                    width: `calc((var(--container-width) - 4rem) / 2)`,\n                    margin: \"0 1rem 2rem 1rem\",\n                  }}\n                  title={node.title}\n                  description_th={node.description_th}\n                  passed={node.passed}\n                  approve={node.approve}\n                  disprove={node.disprove}\n                  abstained={node.abstained}\n                  absent={node.absent}\n                  vote_date={node.vote_date}\n                  slug={node.fields.slug}\n                />\n              ))}\n            </div>\n          </div>\n        </section>\n      ) : null}\n      <section css={{ ...cssSection, background: \"#eeeeee\" }}>\n        <div className=\"container\">\n          <h2\n            css={{\n              fontSize: \"4.8rem\",\n              textAlign: \"center\",\n              paddingTop: \"6rem\",\n            }}\n          >\n            สมาชิกพรรคในสภา\n          </h2>\n          <ul\n            css={{\n              display: \"block\",\n              listStyle: \"none\",\n              textAlign: \"center\",\n              \"> li\": {\n                display: \"inline-block\",\n                fontSize: \"2.4rem\",\n                padding: \"1rem 0 0\",\n                margin: \"0 1rem\",\n                cursor: \"pointer\",\n                \"&.active\": {\n                  borderBottom: \"8px solid var(--cl-black)\",\n                },\n              },\n            }}\n          >\n            {tabList.map(tab => (\n              <li\n                key={tab.id}\n                className={[tab.getClass(memberFilter)].join(\" \")}\n                role=\"tab\"\n                onClick={selectMemberFilter(tab.filter)}\n              >\n                {tab.label} ({tab.count})\n              </li>\n            ))}\n          </ul>\n          {showingMembers.length > 0 ? (\n            <div\n              css={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                justifyContent: \"space-evenly\",\n              }}\n            >\n              {showingMembers.map((member, index) => (\n                <PeopleCard key={member.id} {...member} type=\"mp\"></PeopleCard>\n              ))}\n            </div>\n          ) : (\n            <div\n              css={{\n                fontFamily: \"var(--ff-title)\",\n                fontSize: \"3.2rem\",\n                textAlign: \"center\",\n                margin: \"6rem 0\",\n              }}\n            >\n              ไม่มีสมาชิก\n            </div>\n          )}\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default PartyPage\n"],"sourceRoot":""}