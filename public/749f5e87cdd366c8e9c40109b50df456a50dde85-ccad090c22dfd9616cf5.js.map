{"version":3,"sources":["webpack:///./src/components/peopleCard.js"],"names":["ProfilePicture","props","data","useStaticQuery","useState","display","imageStyle","setImageStyle","placeholderStyle","setPlaceholderStyle","className","css","style","src","politicianPicture","alt","title","name","lastname","onError","e","fluid","placeholderImage","childImageSharp","cssName","fontFamily","fontSize","lineHeight","marginBottom","memberDetailsCss","PeopleCard","peopleInfo","type","is_mp","mp_type","mp_list","mp_province","mp_zone","party","MPInfo","is_senator","SenatorInfo","is_cabinet","cabinet_position","CabinetInfo","target","href","fields","slug","key","id","flex","padding","paddingRight","border","borderRadius","background","media","marginRight","color","textDecoration"],"mappings":"oeASaA,EAAiB,SAAAC,GAC5B,IAAMC,EAAOC,yBAAe,cADS,EAeDC,mBAAS,CAAEC,QAAS,YAAjDC,EAf8B,KAelBC,EAfkB,OAgBWH,mBAAS,CAAEC,QAAS,SAA7DG,EAhB8B,KAgBZC,EAhBY,KAuBrC,OACE,mBACEC,UAAU,kBACVC,IAAG,EAaHC,MACE,IAKF,YAAC,oBAAD,KACE,mBACEC,IAAKC,YAAkBb,GACvBc,IAAQd,EAAMe,MAAX,IAAoBf,EAAMgB,KAA1B,IAAkChB,EAAMiB,SAC3CP,IAAG,EACHC,MAAON,EACPa,QAjCa,SAAAC,GACnBb,EAAc,CAAEF,QAAS,SACzBI,EAAoB,CAAEJ,QAAS,aAiC3B,YAAC,IAAD,CACEgB,MAAOnB,EAAKoB,iBAAiBC,gBAAgBF,MAC7CT,MAAOJ,OAOXgB,EAAU,CACdC,WAAY,kBACZC,SAAU,SACVC,WAAY,IACZC,aAAc,UA6BVC,EAAmB,CACvBH,SAAU,SACVD,WAAY,kB,sFAoECK,IApDI,SAAC,GAAwB,IAAD,EACrCC,EADgBC,EAAqB,EAArBA,KAAS/B,EAAY,wBAUzC,MARa,OAAT+B,GAAiB/B,EAAMgC,MACzBF,EA/CW,SAAA9B,GAAK,OAClB,mBAAKS,UAAU,aACb,mBACEA,UAAU,YACVC,IAAKa,GACFvB,EAAMe,MAHX,IAGoBf,EAAMgB,KAH1B,IAGkChB,EAAMiB,UACxC,mBAAKR,UAAU,oBACM,iBAAlBT,EAAMiC,QACH,QAAQjC,EAAMiC,SACbjC,EAAMkC,QAAN,aAA6BlC,EAAMkC,QAAnC,IAFJ,QAGWlC,EAAMiC,QAHjB,WAGmCjC,EAAMmC,YAHzC,QAG4DnC,EAAMoC,QAAW,IAJhF,UAKUpC,EAAMqC,QAoCHC,CAAOtC,GACF,YAAT+B,GAAsB/B,EAAMuC,WACrCT,EAjCgB,SAAA9B,GAAK,OACvB,mBAAKS,UAAU,aACb,mBACEA,UAAU,YACVC,IAAKa,GACFvB,EAAMe,MAHX,IAGoBf,EAAMgB,KAH1B,IAGkChB,EAAMiB,UACxC,mBAAKR,UAAU,oBAAf,kBA2Ba+B,CAAYxC,IACP,YAAT+B,GAAsB/B,EAAMyC,cACrCX,EApBgB,SAAA9B,GAAK,OACvB,mBAAKS,UAAU,aACb,mBACEA,UAAU,YACVC,IAAKa,GACFvB,EAAMe,MAHX,IAGoBf,EAAMgB,KAH1B,IAGkChB,EAAMiB,UACxC,mBAAKR,UAAU,mBAAmBC,IAAKkB,GACpC5B,EAAM0C,kBAER1C,EAAMqC,MAAQ,mBAAK3B,IAAKkB,GAAV,OAAiC5B,EAAMqC,OAAe,MAWxDM,CAAY3C,IAIzB,iBACE4C,OAAO,SACPC,KAAM7C,EAAM8C,OAAOC,KACnBC,IAAKhD,EAAMiD,GACXxC,UAAWT,EAAMS,UACjBC,IAAG,gBACDN,QAAS,OACT8C,KAAM,YACNC,QAAS,OACTC,aAAc,OACdC,OAAQ,6BACRC,aAAc,OACdC,WAAY,kBACZ5B,aAAc,OACdF,SAAU,UATT,EAUA+B,YAAM,MAAO,CACZ,sBAAuB,CACrBC,YAAa,SAZhB,EAeDC,MAAO,UAfN,EAgBD,WAAW,CACTC,eAAgB,QAjBjB,OAoBHhD,MAAK,iBAAQX,EAAMW,OAAS,KAE5B,YAACZ,EAAmBC,GACpB,mBACEU,IAAG,GAMFoB","file":"749f5e87cdd366c8e9c40109b50df456a50dde85-ccad090c22dfd9616cf5.js","sourcesContent":["import React, { useState } from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport { politicianPicture } from \"../utils\"\nimport { media } from \"../styles\"\n\nimport { LazyLoadComponent } from \"react-lazy-load-image-component\"\n\nexport const ProfilePicture = props => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(\n        relativePath: { eq: \"images/people/placeholder.png\" }\n      ) {\n        childImageSharp {\n          fluid(maxWidth: 84) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  const [imageStyle, setImageStyle] = useState({ display: \"display\" })\n  const [placeholderStyle, setPlaceholderStyle] = useState({ display: \"none\" })\n\n  const onImageError = e => {\n    setImageStyle({ display: \"none\" })\n    setPlaceholderStyle({ display: \"block\" })\n  }\n\n  return (\n    <div\n      className=\"profile-picture\"\n      css={{\n        flex: \"0 0 84px\",\n        borderRadius: 84,\n        width: 84,\n        height: 84,\n        float: \"left\",\n        marginBottom: 0,\n        marginRight: \"2rem\",\n        border: \"2px solid var(--cl-black)\",\n        background: \"var(--cl-gray-2) no-repeat\",\n        backgroundSize: \"cover\",\n        overflow: \"hidden\",\n      }}\n      style={\n        {\n          // backgroundImage: `url(${politicianPicture(props)})`,\n        }\n      }\n    >\n      <LazyLoadComponent>\n        <img\n          src={politicianPicture(props)}\n          alt={`${props.title} ${props.name} ${props.lastname}`}\n          css={{ width: \"100%\" }}\n          style={imageStyle}\n          onError={onImageError}\n        ></img>\n        <Img\n          fluid={data.placeholderImage.childImageSharp.fluid}\n          style={placeholderStyle}\n        />\n      </LazyLoadComponent>\n    </div>\n  )\n}\n\nconst cssName = {\n  fontFamily: \"var(--ff-title)\",\n  fontSize: \"2.4rem\",\n  lineHeight: 1.2,\n  marginBottom: \"0.5rem\",\n}\n\nconst MPInfo = props => (\n  <div className=\"card-info\">\n    <div\n      className=\"card-name\"\n      css={cssName}\n    >{`${props.title} ${props.name} ${props.lastname}`}</div>\n    <div className=\"card-description\">\n      {props.mp_type === \"บัญชีรายชื่อ\"\n        ? `ส.ส. ${props.mp_type}` +\n          (props.mp_list ? ` ลำดับที่ ${props.mp_list}` : ``)\n        : `ส.ส. ${props.mp_type} จังหวัด${props.mp_province} เขต ${props.mp_zone}`}{\" \"}\n      พรรค{`${props.party}`}\n    </div>\n  </div>\n)\n\nconst SenatorInfo = props => (\n  <div className=\"card-info\">\n    <div\n      className=\"card-name\"\n      css={cssName}\n    >{`${props.title} ${props.name} ${props.lastname}`}</div>\n    <div className=\"card-description\">สมาชิกวุฒิสภา</div>\n  </div>\n)\n\nconst memberDetailsCss = {\n  fontSize: \"1.8rem\",\n  fontFamily: \"var(--ff-text)\",\n}\n\nconst CabinetInfo = props => (\n  <div className=\"card-info\">\n    <div\n      className=\"card-name\"\n      css={cssName}\n    >{`${props.title} ${props.name} ${props.lastname}`}</div>\n    <div className=\"card-description\" css={memberDetailsCss}>\n      {props.cabinet_position}\n    </div>\n    {props.party ? <div css={memberDetailsCss}>พรรค{props.party}</div> : null}\n  </div>\n)\n\nconst PeopleCard = ({ type, ...props }) => {\n  let peopleInfo\n  if (type === \"mp\" || props.is_mp) {\n    peopleInfo = MPInfo(props)\n  } else if (type === \"senator\" || props.is_senator) {\n    peopleInfo = SenatorInfo(props)\n  } else if (type === \"cabinet\" || props.is_cabinet) {\n    peopleInfo = CabinetInfo(props)\n  }\n\n  return (\n    <a\n      target=\"_blank\"\n      href={props.fields.slug}\n      key={props.id}\n      className={props.className}\n      css={{\n        display: \"flex\",\n        flex: \"0 1 455px\",\n        padding: \"4rem\",\n        paddingRight: \"2rem\",\n        border: \"1px solid var(--cl-gray-2)\",\n        borderRadius: \"1rem\",\n        background: \"var(--cl-white)\",\n        marginBottom: \"1rem\",\n        fontSize: \"1.8rem\",\n        [media(767)]: {\n          \"&:nth-of-type(2n+1)\": {\n            marginRight: \"1rem\",\n          },\n        },\n        color: \"inherit\",\n        \"&:hover\": {\n          textDecoration: \"none\",\n        },\n      }}\n      style={{ ...(props.style || {}) }}\n    >\n      <ProfilePicture {...props}></ProfilePicture>\n      <div\n        css={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        {peopleInfo}\n      </div>\n    </a>\n  )\n}\n\nexport default PeopleCard\n"],"sourceRoot":""}